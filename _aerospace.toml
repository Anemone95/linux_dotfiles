# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
# after-startup-command = [
#     'exec-and-forget bash $HOME/.local/bin/borders.sh'
# ]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 5

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
    preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = S
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[workspace-to-monitor-force-assignment]
1 = '^Built-in Retina Display' 
2 = ['main', 'HP E24i G4 \(2\)', 'LG ULTRAWIDE']
3 = ['HP E24i G4 \(1\)', 'HP E24i G4', 'Sidecar Display.*', 'Built-in Retina Display']
Q = '^Built-in Retina Display' 
W = ['main', 'HP E24i G4 \(2\)', 'LG ULTRAWIDE']
E = ['HP E24i G4 \(1\)', 'HP E24i G4', 'Sidecar Display.*', 'Built-in Retina Display']
A = '^Built-in Retina Display' 
S = ['main', 'HP E24i G4 \(2\)', 'LG ULTRAWIDE']
D = ['HP E24i G4 \(1\)', 'HP E24i G4', 'Sidecar Display.*', 'Built-in Retina Display']

[gaps]
    inner.horizontal = 0
    inner.vertical =   0
    outer.left =       2
    outer.bottom =     2
    outer.top =        2
    outer.right =      2

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}

[[on-window-detected]]
    if.app-id = 'com.jetbrains.WebStorm'
    run = 'layout floating'
[[on-window-detected]]
    if.app-id = 'com.spotify.client'
    run = 'layout floating'
[[on-window-detected]]
    if.app-id = 'com.jetbrains.pycharm'
    run = 'layout floating'
# [[on-window-detected]]
#     if.app-id = 'com.tencent.xinWeChat'
#     if.window-title-regex-substring = '^(?!WeChat|WeChat \(Chats\)|微信 \(聊天\)).*$'
#     run = 'layout floating'
[[on-window-detected]]
    if.window-title-regex-substring = '(Picture-in-Picture|画中画)'
    run = 'layout floating'
[[on-window-detected]]
    if.window-title-regex-substring = 'spotifycom.spotify.client'
    run = 'layout floating'
[[on-window-detected]]
    if.window-title-regex-substring = 'com.apple.systempreferences'
    run = 'layout floating'
[[on-window-detected]]
    if.app-id = 'ru.keepcoder.Telegram'
    if.window-title-regex-substring = '^$'
    run = 'layout floating'
[[on-window-detected]]
    if.window-title-regex-substring = 'com.cisco.anyconnect.gui'
    run = 'layout floating'

[[on-window-detected]]
    if.app-id = 'com.nvidia.gfnpc.mall'
    run = 'move-node-to-workspace S'

[mode.main.binding]

    # All possible keys:
    # - Letters.        a, b, c, ..., z
    # - Numbers.        0, 1, 2, ..., D
    # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
    # - F-keys.         f1, f2, ..., f20
    # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
    #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
    #                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
    #                   sectionSign (ISO keyboards only, european keyboards only)
    # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
    #                   keypadMinus, keypadMultiply, keypadPlus
    # - Arrows.         left, down, up, right

    # All possible modifiers: cmd, alt, ctrl, shift

    # All possible commands: https://nikitabobko.github.io/AeroSpace/commands

    # See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
    # You can uncomment the following lines to open up terminal with alt + enter shortcut
    # (like in i3)
    # alt-enter = '''exec-and-forget osascript -e '
    # tell application "Terminal"
    #     do script
    #     activate
    # end tell'
    # '''

    # See: https://nikitabobko.github.io/AeroSpace/commands#layout
    ctrl-slash = 'layout tiles horizontal vertical'
    ctrl-comma = 'layout accordion horizontal vertical'

    # See: https://nikitabobko.github.io/AeroSpace/commands#focus
    ctrl-o = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors down'
    ctrl-9 = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors left'
    ctrl-0 = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move
    ctrl-shift-9 = 'move-node-to-monitor --focus-follows-window --wrap-around prev'
    ctrl-shift-0 = 'move-node-to-monitor --focus-follows-window --wrap-around next'

    # See: https://nikitabobko.github.io/AeroSpace/commands#resize
    ctrl-minus = 'resize smart -50'
    ctrl-equal = 'resize smart +50'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace
    ctrl-1 = 'workspace 1'
    ctrl-2 = 'workspace 2'
    ctrl-3 = 'workspace 3'
    ctrl-4 = 'workspace Q'
    ctrl-5 = 'workspace W'
    ctrl-6 = 'workspace E'
    ctrl-7 = 'workspace A'
    ctrl-8 = 'workspace S'
    # ctrl-9 = 'workspace D'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
    ctrl-shift-1 = ['move-node-to-workspace 1','workspace 1']
    ctrl-shift-2 = ['move-node-to-workspace 2','workspace 2']
    ctrl-shift-3 = ['move-node-to-workspace 3','workspace 3']
    ctrl-shift-4 = ['move-node-to-workspace Q','workspace Q']
    ctrl-shift-5 = ['move-node-to-workspace W','workspace W']
    ctrl-shift-6 = ['move-node-to-workspace E','workspace E']
    ctrl-shift-7 = ['move-node-to-workspace A','workspace A']
    ctrl-shift-8 = ['move-node-to-workspace S','workspace S']

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
    ctrl-tab = 'focus-back-and-forth'
    # See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
    shift-up = 'join-with up'
    shift-down = 'join-with down'
    shift-left = 'join-with left'
    shift-right = 'join-with right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#mode
    ctrl-semicolon = 'mode service'
    ctrl-quote = 'mode application'
    
    ctrl-f = 'fullscreen'
    ctrl-q = 'close'
    ctrl-m = 'macos-native-minimize'

[mode.service.binding]
    esc = ['reload-config', 'mode main']
    r = ['flatten-workspace-tree', 'mode main'] # reset layout
    f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
    backspace = ['close-all-windows-but-current', 'mode main']

    1 = ['workspace 1', 'mode main']
    2 = ['workspace 2', 'mode main']
    3 = ['workspace 3', 'mode main']
    q = ['workspace Q', 'mode main']
    w = ['workspace W', 'mode main']
    e = ['workspace E', 'mode main']
    a = ['workspace A', 'mode main']
    s = ['workspace S', 'mode main']
    d = ['workspace D', 'mode main']
    
    ctrl-1 = ['move-node-to-workspace 1','workspace 1', 'mode main']
    ctrl-2 = ['move-node-to-workspace 2','workspace 2', 'mode main']
    ctrl-3 = ['move-node-to-workspace 3','workspace 3', 'mode main']
    ctrl-q = ['move-node-to-workspace Q','workspace Q', 'mode main']
    ctrl-w = ['move-node-to-workspace W','workspace W', 'mode main']
    ctrl-e = ['move-node-to-workspace E','workspace E', 'mode main']
    ctrl-a = ['move-node-to-workspace A','workspace A', 'mode main']
    ctrl-s = ['move-node-to-workspace S','workspace S', 'mode main']
    ctrl-d = ['move-node-to-workspace D','workspace D', 'mode main']


    h = ['join-with left', 'mode main']
    j = ['join-with down', 'mode main']
    k = ['join-with up', 'mode main']
    l = ['join-with right', 'mode main']

[mode.application.binding]
    esc = ['reload-config', 'mode main']

    x = ['exec-and-forget open -a /Applications/WeChat.app','mode main']
    c = ['exec-and-forget open -a /Applications/Google\ Chrome.app','mode main']
    w = ['exec-and-forget open -a /Applications/Webstorm.app','mode main']
    g = ['exec-and-forget open -a /Applications/ChatGPT.app','mode main']
    t = ['exec-and-forget $HOME/.local/bin/aerospace.sh com.googlecode.iterm2 iTerm2','mode main']
    n = ['exec-and-forget open -a /Applications/Notion.app','mode main']
    o = ['exec-and-forget open -a /Applications/Microsoft\ Outlook.app','mode main']
    v = ['exec-and-forget open -a /Applications/Visual\ Studio\ Code.app','mode main']
    s = ['exec-and-forget open -a /Applications/Signal.app','mode main']
    m = ['exec-and-forget open -a /Applications/Telegram.app','mode main']
    e = ['exec-and-forget open -a /Users/wenyuan/Applications/Chrome\ Apps.localized/Element.app','mode main']
    z = ['exec-and-forget open -a /Applications/Zotero.app','mode main']
    p = ['exec-and-forget open -a /Applications/PyCharm.app','mode main']
    y = ['exec-and-forget open -a /Applications/Spotify.app','mode main']
