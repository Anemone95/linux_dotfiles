#!/bin/bash

# Usage: ./script.sh [from_path] [to_path]

# Check if correct number of arguments is provided
if [ "$#" -eq 2 ]; then
    FROM_PATH=$1
    TO_PATH=$2
    UNTAR=1
elif [ "$#" -eq 3 ]; then 
    FROM_PATH=$2
    TO_PATH=$3
    UNTAR=0
else
    echo "Copy directory from/to remote server (-t means only copy tar ball)"
    echo "Usage: $0 [-t] [from_path] [to_path]"
    exit 1
fi


# Function to extract user, server and path from input
extract_path_info() {
    USER_SERVER=$(echo $1 | cut -d: -f1)
    FOLDER=$(echo $1 | cut -d: -f2)
    echo "$USER_SERVER $FOLDER"
}

# Function to perform copy and extract operation
perform_copy_extract() {
    FROM_INFO=($(extract_path_info $1))
    FROM_USER_SERVER=${FROM_INFO[0]}
    FROM_FOLDER=${FROM_INFO[1]}
    
    TO_INFO=($(extract_path_info $2))
    TO_USER_SERVER=${TO_INFO[0]}
    TO_FOLDER=${TO_INFO[1]}
    
    TAR_NAME="$(basename "$FROM_FOLDER").tgz"
    
    # Check if from path is remote
    if [[ $FROM_PATH == *":"* ]]; then
        # SSH and tar the folder on the remote server
        echo "ssh $FROM_USER_SERVER \"tar -czf \"$(dirname "$FROM_FOLDER")/$TAR_NAME\" -C \"$FROM_FOLDER\" ." 
        ssh "$FROM_USER_SERVER" "tar -czf $(dirname "$FROM_FOLDER")/$TAR_NAME -C "$FROM_FOLDER" ."
    else
        echo "Creating tar of $FROM_FOLDER locally..."
        tar -czf $(dirname "$FROM_FOLDER")/"$TAR_NAME" -C "$FROM_FOLDER" .
    fi
    
    # Check if to path is remote
    #TEMP_TGZ="/tmp/$(uuidgen).tgz"
    TEMP_TGZ="/tmp/1.tgz"
    if [[ $TO_PATH == *":"* ]]; then
        # FIXME to be tested
        # SCP the tar file to the remote path
        echo "Copying $TAR_NAME to $TO_USER_SERVER:$TEMP_DIR"
        scp "$(dirname "$FROM_INFO")/$TAR_NAME" "$TO_USER_SERVER:$TEMP_TGZ"
        # SSH and untar the file on the remote server and then remove the tar file
        # echo "ssh "$TO_USER_SERVER" "tar -xzf \"$TO_FOLDER/$TAR_NAME\" -C $TO_FOLDER && rm \"$TO_FOLDER/$TAR_NAME\""
        # ssh "$TO_USER_SERVER" "tar -xzf $TO_FOLDER/$TAR_NAME -C $TO_FOLDER"
        #ssh "$TO_USER_SERVER" "tar -xzf $TO_FOLDER/$TAR_NAME -C $TO_FOLDER && rm $TO_FOLDER/$TAR_NAME"
        ssh "$TO_USER_SERVER" '
        if [ ! -d '"$TO_FOLDER"' ]; then
            echo "'"$TO_FOLDER"' not exists, creating..."
            TARGET_DIR='"$TO_FOLDER"';
        else
            TARGET_DIR='"$TO_FOLDER/$(basename $FROM_FOLDER)"';
        fi;
        echo "mkdir $TARGET_DIR";
        mkdir "$TARGET_DIR";
        echo "untar to $TARGET_DIR";
        tar -xzf '"$TEMP_TGZ"' -C "$TARGET_DIR"'
    else
        # Check if the TO_FOLDER exists
        DEST=$TO_FOLDER
        if [ "$UNTAR" -eq 1 ]; then
            if [ -d "$TO_FOLDER" ]; then
                echo "The folder $TO_FOLDER exist. Copy to $TO_FOLDER/$(basename $FROM_FOLDER)"
                DEST=$TO_FOLDER/$(basename $FROM_FOLDER)
                mkdir -p "$DEST"
            else
                echo "The folder $TO_FOLDER does not exist. Creating it and preparing to move contents."
                # Create the TO_FOLDER
                mkdir -p "$TO_FOLDER"
            fi
            # Move the tar file to the local path
            scp "$FROM_USER_SERVER:$(dirname "$FROM_FOLDER")/$TAR_NAME" "$DEST"
            tar -xzf "$DEST/$TAR_NAME" -C "$DEST"
            rm "$DEST/$TAR_NAME"
        else
            if [ -d "$TO_FOLDER" ]; then
                echo "$TO_FOLDER exists. Copy to $TO_FOLDER/$TAR_NAME"
            else
                echo "$TO_FOLDER does not exist. Creating it and preparing to move contents."
            fi
            # Move the tar file to the local path
            scp "$FROM_USER_SERVER:$(dirname "$FROM_FOLDER")/$TAR_NAME" "$DEST"
        fi
    fi
    
    # Remove the tar file from the from path
    if [[ $FROM_PATH == *":"* ]]; then
        echo "Removing $TAR_NAME from $FROM_USER_SERVER..."
        ssh "$FROM_USER_SERVER" "rm $TEMP_TGZ"
    else
        echo "Removing $TAR_NAME from $TAR_NAME"
        rm "$(dirname "$FROM_FOLDER")/$TAR_NAME"
    fi
}

# Perform the copy and extract operation
perform_copy_extract "$FROM_PATH" "$TO_PATH"
